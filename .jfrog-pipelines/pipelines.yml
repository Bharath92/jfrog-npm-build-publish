resources:
  - name: npm_git_repo
    type: GitRepo
    configuration:
      gitProvider: bharath_github
      path: bharath92/jfrog-npm-build-publish
      branches:
        include: main
  
  - name: build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: artifactory
      buildName: build_and_publish
      buildNumber: -1

pipelines:
  - name: npm_build_publish
    configuration:
      chronological: true
    steps:
#       - name: jenkins
#         type: Jenkins
#         configuration:
#           jenkinsJobName: testPipeline
#           integrations:
#             - name: jenkins
      - name: test
        type: Matrix
        stepletMultipliers:
          fastFail: true
          environmentVariables:
            - arch: x86_64
            - arch: arm64
        configuration:
          inputResources:
            - name: npm_git_repo
          multiNode: true
          runtime:
            type: host
        execution:
          onExecute:
            - echo $arch
        
      - name: build
        type: NpmBuild
        configuration:
          resolverRepo: npm-remote
          inputResources:
            - name: npm_git_repo
              trigger: false
          inputSteps:
            - name: test
#             - name: jenkins
          integrations:
            - name: artifactory
        execution:
          onStart:
            - pushd $res_npm_git_repo_resourcePath
            - npm version "0.0.$run_number"
            - popd
      
      - name: publish
        type: NpmPublish
        configuration:
          forceXrayScan: true
          failOnScan: true
          autoPublishBuildInfo: true
          deployerRepo: npm-local
          inputSteps:
            - name: build
          integrations:
            - name: artifactory
          outputResources:
             - name: build_info
 
  - name: build_docker_image
    steps:
      - name: dockerbuild
        type: Bash
        configuration:
          inputResources:
            - name: build_info
        execution:
          onStart:
            - echo docker
        
      - name: deploy
        type: Bash
        configuration:
          inputSteps:
            - name: dockerbuild
        execution:
          onStart:
            - export dummy_deployment_id=$(date +%s)
            - echo "$dummy_deployment_id"
            - add_run_variables "deployment_id=$dummy_deployment_id"
      
      - name: itest
        type: Bash
        configuration:
          inputSteps:
            - name: deploy
        execution:
          onStart:
            - echo itest
      
      - name: dockerpush
        type: Bash
        configuration:
          inputSteps:
            - name: itest
        execution:
          onStart:
            - echo pushed
      
      - name: cleanup
        type: Bash
        configuration:
          inputSteps:
            - name: itest
        execution:
          onStart:
            - echo "deleting $deployment_id"
